{"ast":null,"code":"export const EXPERIENCIA_W = [{\n  title: \"\",\n  date: \"\",\n  responsabilidades: [],\n  imagenes: []\n}];\nasync function fetchData() {\n  console.log('fetchData se está ejecutando');\n  try {\n    const response = await fetch('http://127.0.0.1:8000/movies'); // Reemplaza con tu endpoint de la API\n    const data = await response.json();\n    console.log('Datos recibidos:', data); // Verifica los datos recibidos\n\n    // Limpiamos el arreglo para evitar datos repetidos en múltiples llamadas\n    EXPERIENCIA_W.length = 0;\n    data.forEach(item => {\n      EXPERIENCIA_W.push({\n        title: item.title,\n        date: item.release_date,\n        responsabilidades: [item.description],\n        imagenes: [item.image_url]\n      });\n    });\n    console.log('EXPERIENCIA_W:', EXPERIENCIA_W); // Verifica el contenido del arreglo\n  } catch (error) {\n    console.error('Error al recibir datos:', error);\n  }\n}\nfetchData();","map":{"version":3,"names":["EXPERIENCIA_W","title","date","responsabilidades","imagenes","fetchData","console","log","response","fetch","data","json","length","forEach","item","push","release_date","description","image_url","error"],"sources":["/Users/diederichsolis/Documents/Progra/Frontend_cine/src/utils/data.js"],"sourcesContent":[" export const EXPERIENCIA_W = [\r\n    {\r\n        title: \"\",\r\n        date: \"\",\r\n        responsabilidades: [],\r\n        imagenes: []\r\n    }\r\n];\r\n\r\nasync function fetchData() {\r\n    console.log('fetchData se está ejecutando');\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:8000/movies'); // Reemplaza con tu endpoint de la API\r\n        const data = await response.json();\r\n\r\n        console.log('Datos recibidos:', data); // Verifica los datos recibidos\r\n\r\n        // Limpiamos el arreglo para evitar datos repetidos en múltiples llamadas\r\n        EXPERIENCIA_W.length = 0;\r\n\r\n        data.forEach(item => {\r\n            EXPERIENCIA_W.push({\r\n                title: item.title,\r\n                date: item.release_date,\r\n                responsabilidades: [item.description],\r\n                imagenes: [item.image_url]\r\n            });\r\n        });\r\n\r\n        console.log('EXPERIENCIA_W:', EXPERIENCIA_W); // Verifica el contenido del arreglo\r\n    } catch (error) {\r\n        console.error('Error al recibir datos:', error);\r\n    }\r\n}\r\n\r\nfetchData();\r\n"],"mappings":"AAAC,OAAO,MAAMA,aAAa,GAAG,CAC1B;EACIC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EACRC,iBAAiB,EAAE,EAAE;EACrBC,QAAQ,EAAE;AACd,CAAC,CACJ;AAED,eAAeC,SAASA,CAAA,EAAG;EACvBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;IAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElCL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,IAAI,CAAC,CAAC,CAAC;;IAEvC;IACAV,aAAa,CAACY,MAAM,GAAG,CAAC;IAExBF,IAAI,CAACG,OAAO,CAACC,IAAI,IAAI;MACjBd,aAAa,CAACe,IAAI,CAAC;QACfd,KAAK,EAAEa,IAAI,CAACb,KAAK;QACjBC,IAAI,EAAEY,IAAI,CAACE,YAAY;QACvBb,iBAAiB,EAAE,CAACW,IAAI,CAACG,WAAW,CAAC;QACrCb,QAAQ,EAAE,CAACU,IAAI,CAACI,SAAS;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;IAEFZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,aAAa,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACZb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACnD;AACJ;AAEAd,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}