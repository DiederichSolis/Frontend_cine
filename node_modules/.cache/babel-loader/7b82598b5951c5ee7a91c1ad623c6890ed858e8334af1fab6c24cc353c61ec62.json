{"ast":null,"code":"export const EXPERIENCIA_W = [{\n  title: \"\",\n  date: \"\",\n  responsabilidades: [],\n  imagenes: []\n}];\nasync function fetchData() {\n  try {\n    const response = await fetch('http://127.0.0.1:8000/movies');\n    if (!response.ok) {\n      throw new Error('Network response was not ok ' + response.statusText);\n    }\n    const data = await response.json();\n    console.log('Datos recibidos:', data);\n\n    // Limpiamos el arreglo y guardamos los datos\n    EXPERIENCIA_W.length = 0;\n    data.forEach(item => {\n      EXPERIENCIA_W.push({\n        title: item.title,\n        date: item.release_date,\n        responsabilidades: [item.description],\n        imagenes: [item.image_url]\n      });\n    });\n    console.log('EXPERIENCIA_W:', EXPERIENCIA_W);\n  } catch (error) {\n    console.error('Error al recibir datos:', error);\n  }\n}\nfetchData();","map":{"version":3,"names":["EXPERIENCIA_W","title","date","responsabilidades","imagenes","fetchData","response","fetch","ok","Error","statusText","data","json","console","log","length","forEach","item","push","release_date","description","image_url","error"],"sources":["/Users/diederichsolis/Documents/Progra/Frontend_cine/src/utils/data.js"],"sourcesContent":[" export const EXPERIENCIA_W = [\r\n    {\r\n        title: \"\",\r\n        date: \"\",\r\n        responsabilidades: [],\r\n        imagenes: []\r\n    }\r\n];\r\n\r\nasync function fetchData() {\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:8000/movies');\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok ' + response.statusText);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Datos recibidos:', data);\r\n\r\n        // Limpiamos el arreglo y guardamos los datos\r\n        EXPERIENCIA_W.length = 0;\r\n        data.forEach(item => {\r\n            EXPERIENCIA_W.push({\r\n                title: item.title,\r\n                date: item.release_date,\r\n                responsabilidades: [item.description],\r\n                imagenes: [item.image_url]\r\n            });\r\n        });\r\n\r\n        console.log('EXPERIENCIA_W:', EXPERIENCIA_W);\r\n    } catch (error) {\r\n        console.error('Error al recibir datos:', error);\r\n    }\r\n}\r\n\r\nfetchData();\r\n\r\n\r\n"],"mappings":"AAAC,OAAO,MAAMA,aAAa,GAAG,CAC1B;EACIC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EACRC,iBAAiB,EAAE,EAAE;EACrBC,QAAQ,EAAE;AACd,CAAC,CACJ;AAED,eAAeC,SAASA,CAAA,EAAG;EACvB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGH,QAAQ,CAACI,UAAU,CAAC;IACzE;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC;;IAErC;IACAX,aAAa,CAACe,MAAM,GAAG,CAAC;IACxBJ,IAAI,CAACK,OAAO,CAACC,IAAI,IAAI;MACjBjB,aAAa,CAACkB,IAAI,CAAC;QACfjB,KAAK,EAAEgB,IAAI,CAAChB,KAAK;QACjBC,IAAI,EAAEe,IAAI,CAACE,YAAY;QACvBhB,iBAAiB,EAAE,CAACc,IAAI,CAACG,WAAW,CAAC;QACrChB,QAAQ,EAAE,CAACa,IAAI,CAACI,SAAS;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;IAEFR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEd,aAAa,CAAC;EAChD,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACZT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACnD;AACJ;AAEAjB,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}